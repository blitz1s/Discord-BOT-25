import discord
from discord.ext import commands, tasks
import os
import platform
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import datetime
import sched , time

from random import choice
from asyncio import sleep as s

sched = AsyncIOScheduler()

def get_expire_time(minutes: int) -> datetime.datetime:

    now = datetime.datetime.now()
    expire_time = now + datetime.timedelta(minutes=minutes)
    return expire_time



client = commands.Bot(command_prefix = "&")
status =["Sıkılmış" , "Eğleniyor" , "Takılıyor"]
@client.event
async def on_ready():
    change_status.start()
    await client.change_presence(activity=discord.Game("Hello World"))
    print("BOT is ready!")
    sched.start()


@tasks.loop(seconds=20)
async def change_status():
    await client.change_presence(activity=discord.Game(choice(status)))


@client.command(name="yardım")
async def send_help_message(ctx):
    await ctx.channel.send(f"``[Timer]\n - başlatma komutu : &başlat [çalışma süresi(dk)] [ara süresi(dk)]\n "
        f"\n -  durdurma komutu : &durdur``")

@client.command(name='başlat')
async def start_timer(ctx, work_time: int, break_time: int):


    if len(sched.get_jobs()) > 0:
        await ctx.channel.send(
            f"``[Zamanlayıcı çalışıyor.]\n - durdurma komutu : &durdur``")
        return

    async def break_schedule(work_time, break_time):

        await ctx.channel.send(
            f"{ctx.author.mention}``\n[Ara bitti! İşine geri dön.] ``")
        work_expire_time = get_expire_time(work_time)
        sched.add_job(work_schedule, 'date', run_date=work_expire_time, args=[
                      work_time, break_time], misfire_grace_time=300)
        pass

    async def work_schedule(work_time, break_time):

        await ctx.channel.send(
            f"{ctx.author.mention}``\n[Çalışma bitti biraz dinlenebilirsin.] ``")
        break_expire_time = get_expire_time(break_time)
        sched.add_job(break_schedule, 'date', run_date=break_expire_time,
                      args=[work_time, break_time], misfire_grace_time=300)
        pass

    work_expire_time = get_expire_time(work_time)
    sched.add_job(work_schedule, 'date', run_date=work_expire_time,
                  args=[work_time, break_time], misfire_grace_time=300)

    await ctx.channel.send(
        f"``[Çalışma Süresi: {work_time}dk, Ara Süresi: {break_time}dk]  .\n - durdurma komutu : &durdur``")


@client.command(name='durdur')
async def stop_timer(ctx):

    sched.remove_all_jobs()
    await ctx.channel.send(
        f"`` Zamanlayıcı Durdu.\n - başlangıç komutu : &başlat [çalışma süresi(dk)] [ara süresi(dk)]``")

client.run("ODMyMDI3NTc2MjI2MjgzNTkx.YHd0EA.4IF3w7B5VTXf1NsZWkbfa7Sb3_g")
